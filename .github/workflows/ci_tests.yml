name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:
  pytest-linux:
    name: pytest (linux-py${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: test_aiida
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          -   5432:5432
      rabbitmq:
          image: rabbitmq:3.8.14-management
          ports:
          -   5672:5672
          -   15672:15672

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install system dependencies
      run: sudo apt update && sudo apt install -y ghostscript postgresql

    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel pytest pytest-cov pgtest
        pip install -e .

    - name: Setup environment
      run: .github/workflows/setup.sh

    - name: Test with pytest
      run: tests/tests.sh

    # - name: Upload coverage to Codecov
    #   if: matrix.python-version == '3.9' && github.repository == 'H2020-OpenModel/ExecFlow'
    #   uses: codecov/codecov-action@v3
    #   with:
    #     files: coverage.xml
    #     flags: linux

  pytest-win:
    name: pytest (windows-py${{ matrix.python-version }})
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install system dependencies
      run: |
        $url = "https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs9550/gs9550w64.exe"
        $outpath = "${{ github.workspace }}\ghostscript.exe"
        Invoke-WebRequest -Uri $url -OutFile $outpath
        $args = @("/S")
        Start-Process -Filepath $outpath -ArgumentList $args
      shell: powershell

    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel pytest pytest-cov pgtest

    - name: Setup environment
      run: .github/workflows/setup.sh

    - name: Test with pytest
      run: tests/tests.sh

    # - name: Upload coverage to Codecov
    #   if: matrix.python-version == '3.9' && github.repository == 'H2020-OpenModel/ExecFlow'
    #   uses: codecov/codecov-action@v3
    #   with:
    #     files: coverage.xml
    #     flags: windows
